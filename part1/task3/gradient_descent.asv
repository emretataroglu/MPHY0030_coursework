function new_val = gradient_descent(multi_func,initial_val,step_size,max_iter,tol,gradient,a)
% Initialise variables
iter = 0;
delta = 1;
disp('**')
disp('
val = initial_val;

% While loop will be executed based on max iteration and tolerance provided
while (iter <= max_iter) && (abs(delta) >= tol)
    
    if iter == max_iter
        fprintf('Max iteration reached.\n')
    end
    
    % Step forward - update
    new_val = val - step_size*gradient(val,a);
    
    % Update iteration and metrics
    iter = iter + 1;
    
    [~,result_initial] = multi_func(initial_val,a);
    [~,result_next_val] = multi_func(val,a);
    
    delta = result_next_val-result_initial;
    val = new_val;

end
end


